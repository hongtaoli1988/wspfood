<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- JNDI


    <bean id="dataSourceA"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/sfa</value>
		</property>
	</bean>
	
	<bean id="dataSourceB"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/public</value>
		</property>
	</bean>
	
	<bean id="dataSourceC"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/pbdz</value>
		</property>
	</bean>
	 -->
	 <!-- c3p0 -->
	<bean id="dataSourceA" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://120.25.156.253:3306/shipinlian"></property>
		<property name="user" value="root"></property>
		<property name="password" value="www.splian.com"></property>
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->  
		<property name="maxPoolSize" value="100" />  
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
		<property name="maxIdleTime" value="1800" />  
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
		<property name="acquireIncrement" value="3" />  
		<property name="maxStatements" value="1000" />  
		<property name="initialPoolSize" value="10" />  
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
		<property name="idleConnectionTestPeriod" value="60" />  
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
		<property name="acquireRetryAttempts" value="30" />  
		<property name="breakAfterAcquireFailure" value="true" />  
		<property name="testConnectionOnCheckout" value="false" /> 
	</bean> 
	<!--
	<bean id="dataSourceB" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="net.sourceforge.jtds.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:jtds:sqlserver://192.168.3.162:1433/PublicDB;SelectMethod=cursor"></property>
		<property name="user" value="java1"></property>
		<property name="password" value="mainone%123"></property>
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="100" />  
		<property name="maxIdleTime" value="1800" />  
		<property name="acquireIncrement" value="3" />  
		<property name="maxStatements" value="1000" />  
		<property name="initialPoolSize" value="10" />  
		<property name="idleConnectionTestPeriod" value="60" />  
		<property name="acquireRetryAttempts" value="30" />  
		<property name="breakAfterAcquireFailure" value="true" />  
		<property name="testConnectionOnCheckout" value="false" />
	</bean> 
	<bean id="dataSourceC" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="net.sourceforge.jtds.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:jtds:sqlserver://192.168.3.162:1433/PBDZ;SelectMethod=cursor"></property>
		<property name="user" value="java1"></property>
		<property name="password" value="mainone%123"></property>
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="100" />  
		<property name="maxIdleTime" value="1800" />  
		<property name="acquireIncrement" value="3" />  
		<property name="maxStatements" value="1000" />  
		<property name="initialPoolSize" value="10" />  
		<property name="idleConnectionTestPeriod" value="60" />  
		<property name="acquireRetryAttempts" value="30" />  
		<property name="breakAfterAcquireFailure" value="true" />  
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
	-->
      
    <bean id="sessionFactoryA"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceA"/>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.dialect">net.sf.hibernate.dialect.SQLServerDialect</prop>-->
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
        <!--org.hibernate.dialect.SQLServerDialect-->
        <property name="mappingResources">
            
            <list>         
                <value>com/mainone/splian/model/GoodsComment.hbm.xml</value>
                <value>com/mainone/splian/model/GoodsTrace.hbm.xml</value>
                <value>com/mainone/splian/model/UserRole.hbm.xml</value>
                <value>com/mainone/splian/model/UserExpand.hbm.xml</value>
                <value>com/mainone/splian/model/UserCertification.hbm.xml</value>
                <value>com/mainone/splian/model/GoodsCommentReply.hbm.xml</value>
                <value>com/mainone/splian/model/Goods.hbm.xml</value>
                <value>com/mainone/splian/model/Dynamic.hbm.xml</value>
                <value>com/mainone/splian/model/UserGoods.hbm.xml</value>
                <value>com/mainone/splian/model/GoodsSeries.hbm.xml</value>
                <value>com/mainone/splian/model/Tags.hbm.xml</value>
                <value>com/mainone/splian/model/UserPraiseLog.hbm.xml</value>
                <value>com/mainone/splian/model/User.hbm.xml</value>
                <value>com/mainone/splian/model/GoodsLinks.hbm.xml</value>
                <value>com/mainone/splian/model/UserFollow.hbm.xml</value>
                <value>com/mainone/splian/model/Inquiry.hbm.xml</value>
                <value>com/mainone/splian/model/Company.hbm.xml</value>
                <value>com/mainone/splian/model/DynamicTags.hbm.xml</value>
                <value>com/mainone/splian/model/GoodsEvaluate.hbm.xml</value>
                <value>com/mainone/splian/model/GoodsTags.hbm.xml</value>
                <value>com/mainone/splian/model/Stores.hbm.xml</value>
                <value>com/mainone/splian/model/Areas.hbm.xml</value>
                <value>com/mainone/splian/model/Classify.hbm.xml</value>
                <value>com/mainone/splian/model/StationLetter.hbm.xml</value>
            </list>
        </property>
    </bean>
    
    
     <!--    
    <bean id="sessionFactoryB"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceB"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>         
            </list>
        </property>
    </bean>
    
    <bean id="sessionFactoryC"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceC"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>         
            </list>
        </property>
    </bean>
	  --> 
    <bean id="transactionManagerA" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactoryA"/>
        </property>
        
    </bean>
    <bean id="txProxyTemplate" abstract="true"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManagerA"/>
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>
    <!-- 
     <bean id="transactionManagerB" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactoryB"/>
        </property>
     </bean>
     
      <bean id="transactionManagerC" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactoryC"/>
        </property>
    </bean>
    --> 

    <bean id="iBaseServiceDaoA" class="com.mainone.dao.BaseServiceDaoImpl">
        <property name="sessionFactory">
            <ref local="sessionFactoryA"/>
        </property>
        <property name="dataSource" value="SqlServer"/>
    </bean>
    <!--
    <bean id="iBaseServiceDaoB" class="com.mainone.dao.BaseServiceDaoImpl">
        <property name="sessionFactory">
            <ref local="sessionFactoryB"/>
        </property>
        <property name="dataSource" value="SqlServer"/>
    </bean>
    
     <bean id="iBaseServiceDaoC" class="com.mainone.dao.BaseServiceDaoImpl">
        <property name="sessionFactory">
            <ref local="sessionFactoryC"/>
        </property>
        <property name="dataSource" value="SqlServer"/>
    </bean>
    -->
    <!--
    <bean id="pageBean"
          class="com.mainone.util.PageBeanImp">
        <property name="IBaseServiceDaoA" ref="iBaseServiceDaoA"/>
     </bean>
     

    <bean id="comApp"
          class="com.mainone.common.ComAppImpl">
        <property name="IBaseServiceDaoB" ref="iBaseServiceDaoB"/> 
     </bean>
     
     <bean id="toolsApp"
           class="com.mainone.common.ToolsApp">
        <property name="IBaseServiceDaoA" ref="iBaseServiceDaoA"/>
        <property name="IBaseServiceDaoB" ref="iBaseServiceDaoB"/>
     </bean>
     
     <bean id="commonApp"
           class="com.mainone.common.CommonAppImpl">
        <property name="IBaseServiceDaoA" ref="iBaseServiceDaoA"/>
        <property name="IBaseServiceDaoB" ref="iBaseServiceDaoB"/>
     </bean>
       -->
    
     <!--===================== common method end ==================== -->
    

    <import resource="spring-config/applicationContext-json.xml"/>
    
    <!--
    <import resource="spring-config/applicationContext-sfa.xml"/>
    <import resource="spring-config/applicationContext-zzf.xml"/>
    <import resource="spring-config/applicationContext-zl.xml"/>
    <import resource="spring-config/applicationContext-ly.xml"/>
      -->
</beans>