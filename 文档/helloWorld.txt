?opensessioninview原理 为什么配置在struts2之前 
?hibernate lazy加载配置
?ActionContextCleanUp配置顺序
1、过滤器原理： try{chain.doFilter(req, res);// Filter 只是链式处理，请求依然转发到目的地址。}
		跳转至页面；
		后续代码执行、




1、HR resin服务器 ehcache缓存字典。 struts2+Hibernate+Spring+resin
2、ac、am apache tomcat服务器负载均衡。 struts2+Hibernate+Spring+Apache+tomcat
3、mis 分布式事务 struts+hibernate+spring+tomcat
4、dai  tomcat    springMVC+mybatis+spring+shiro(jeesite框架生成)

1、struts2+Hibernate+Spring :项目
web.xml配置：
<filter>  
        <filter-name>openSessionInView</filter-name>  
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>  
</filter>  
<filter-mapping>  
        <filter-name>openSessionInView</filter-name>  
        <url-pattern>/*</url-pattern>  
</filter-mapping> 
<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
</context-param>
<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>
<filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
</filter>

<filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>*.html</url-pattern>
</filter-mapping>

2、struts+hibernate+spring
web.xml配置：
<!-- openSessionInView 要配置在struts2的FilterDispatcher之前-->  
<filter>  
        <filter-name>openSessionInView</filter-name>  
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>  
</filter>  
<filter-mapping>  
        <filter-name>openSessionInView</filter-name>  
        <url-pattern>/*</url-pattern>  
</filter-mapping> 

<listener>          
  	<listener-class>     
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>           
</listener>
<servlet>        
    <servlet-name>action</servlet-name>
    <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
    <init-param>
      <param-name>config</param-name>
      <param-value>/WEB-INF/struts-config.xml</param-value>
    </init-param>
    <init-param>    
      <param-name>debug</param-name>
      <param-value>3</param-value>
    </init-param>
    <init-param>
      <param-name>detail</param-name>
      <param-value>3</param-value>
    </init-param>
    <load-on-startup>0</load-on-startup>
</servlet> 
applicationContext.xml配置：
配置数据源、事务控制、service层、dao层
struts-config.xml配置：
标示<action
		name="LadderAccountForm" 
		path="/LadderAccountAction"
		scope="request"
		validate="false"
		parameter="method"
		type="org.springframework.web.struts.DelegatingActionProxy">
		<forward name="LadderSearchPage" path="/jsp/admin/gzhs/LadderList.jsp"></forward>
		<forward name="LadderAddSavePage" redirect="true" path="/LadderAccountAction.xml?method=searchBase" />
		</action>由springDelegatingActionProxy代理类生成
添加spring插件
<plug-in className="org.springframework.web.struts.ContextLoaderPlugIn">
		<set-property property="contextConfigLocation" value="/WEB-INF/actionContext.xml" />
</plug-in>
actionContext.xml配置
主要配置action
<bean name="/LadderAccountAction" class="com.powerapps.action.gzhs.LadderAccountAction" singleton="false">
3、ssh的web.xml配置(sitemesh框架+ActionContextCleanUp)：
filter配置顺序：
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
 
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-cleanup</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<filter>
		<filter-name>struts</filter-name>
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
